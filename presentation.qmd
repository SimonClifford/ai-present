---
title: "An AI tool for Dementia"
#subtitle: "It's containers all the way down"
author: "Simon Clifford"
institute: "University of Cambridge"
date: "2024-10-24"
date-format: "Do MMMM YYYY"
format:
  revealjs: 
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: "images/Colour logo RGB_DM.jpg"
    css: styles.css
    theme: [default,mytheme.scss]
    mermaid-format: svg
title-slide-attributes:
    data-background-image: images/intended_layout.svg
    data-background-size: "60%"
    data-background-repeat: repeat
    data-background-opacity: "0.5"
---

## What is AI Dementia?

::: {.notes}
The algorithm:
1. Takes a 3D brain scan (a magnetic resonance image, MRI).
2. Processes it to reduce it to only showing grey matter.
3. Obtains some cognitive scores, usually from a database.
4. Runs the fairly simply Python code to reduce all this to a single score.
:::

The method^1,2^
uses a machine learning (ML) algorithm trained on brain images (MRIs) and cognitive
scores to give a prognostic score of the likelihood of the patient having Alzheimer's.

::: footer
1: https://doi.org/10.1016/j.nicl.2020.102199

2: https://doi.org/10.1101/2020.08.15.252601
:::

```{mermaid}
%%| fig-width: 1000.0px
%%| fig-height: 400.0px
graph LR
A[Brain MRI] --> B[Gray Matter]
B --> C[ML Model]
D[Cognitive Scores] --> C
```

## The XNAT prototype
::: {.notes}
Inherited the project from an earlier incarnation developed by Piero and Matt.

XNAT is a research platform for importing and processing image data.  However, it's not generally deployed in clinical settings.
:::
![XNAT prototype, Coronica & Archer](images/Compute-output.jpeg)

## Structure of the prototype
::: {.notes}
The code has various scripts that fire on particular XNAT triggers to perform the
algorithm.

REDCap is a "secure web application for building online surveys and databases".
It provides an API for recovering previously entered data.  It's commmonly used
in clinical research settings.

The Docker container is where the ML code is.
:::
```{mermaid}
%%| fig-width: 1000.0px
%%| fig-height: 400.0px
graph LR
A[XNAT server] --> B[Docker container]
A --> C[REDCap server^1^]
```

The Docker container holds a Debian Stretch^2^ image with SPM12^3^ and a Matlab runtime.
SPM is a Matlab library for analysing brain images.

::: footer
1: https://projectredcap.org/

2: Debian Stretch June 2017 to June 2022, https://www.debian.org/releases/stretch/

3: https://www.fil.ion.ucl.ac.uk/spm/software/spm12/
:::

## Should separate the old bits from web-facing bits
- Another container

## Web app
- Rationale for web service
- Flask
  - WSGI

## Database
- App needs users, authentication
  - Somewhere to store usernames, hashes, requests
  - _Could_ use SQLite but gives problems later
  - Really like to use PostgreSQL
    - Have to assume user has it installed?
    - No!  Another container!

## Cognitive Scores
- REDCap DB

## Images
- Prototype was handed images
- We need to get them from PACS
  - Explain PACS
  - Explain DICOM
  - Pynetdicom
  - Show search page of app?
  - Conversion to NIFTI
  - Segmentation

## Segmentation slow
- Asynchronous web request
- User submits, goes away
- Req keeps going
- Celery!
  - But celery needs a broker.
  - Redis
  - Have to assume user has it installed?
  - No! Another container!

## Need SSL to keep secret
- WSGI hosters not always great at that
- Plus host may already do this
- Optional SSL bit then, reverse proxy, nginx
- WHERE CAN IT GO?

## What about testing?
- Can't test against live PACS, want to test PACS parts
- Mocking?  But this is the hard bit
- Could run a test PACS with safe data
- Oh ho ho

## docker-compose
- Show file
- Fun fact: docker compose inside a container will use the local container's `docker-compose.yml`
  but files referred to from that compose file are looked for _on the host_.